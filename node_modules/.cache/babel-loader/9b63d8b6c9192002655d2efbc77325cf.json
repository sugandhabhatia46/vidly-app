{"ast":null,"code":"var _jsxFileName = \"/Users/sugandhabhatia/ReactApps/vidly/src/components/movies.jsx\";\nimport React, { Component } from 'react';\nimport { getMovies } from '../services/fakeMovieService';\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from './common/pagination';\nimport { paginate } from '../utils/paginate';\nimport ListGroup from './common/listGroup';\nimport MoviesTable from './moviesTable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      genres: [],\n      currentPage: 1,\n      pageSize: 4\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleToggle = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movie[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handlePageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = path => {\n      console.log(path);\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: '',\n      name: 'All Genres'\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"There are no movies in the databese\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Showing \", filtered.length, \" movies in Database\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          onLike: this.handleToggle,\n          onDelete: this.handleDelete,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/sugandhabhatia/ReactApps/vidly/src/components/movies.jsx"],"names":["React","Component","getMovies","getGenres","Pagination","paginate","ListGroup","MoviesTable","Movies","state","movies","genres","currentPage","pageSize","handleDelete","movie","filter","m","_id","setState","handleToggle","index","indexOf","liked","handlePageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","path","console","log","componentDidMount","name","render","length","count","allMovies","filtered"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getMovies } from '../services/fakeMovieService';\nimport { getGenres } from '../services/fakeGenreService';\nimport Pagination from './common/pagination';\nimport { paginate } from '../utils/paginate';\nimport ListGroup from './common/listGroup';\nimport MoviesTable from './moviesTable';\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: '', name: 'All Genres' }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleToggle = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movie[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (path) => {\n    console.log(path);\n  };\n\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      selectedGenre,\n      movies: allMovies,\n    } = this.state;\n\n    if (count === 0) return <h4>There are no movies in the databese</h4>;\n\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n    const movies = paginate(filtered, currentPage, pageSize);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <h4>Showing {filtered.length} movies in Database</h4>\n          <MoviesTable\n            movies={movies}\n            onLike={this.handleToggle}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n          />\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}